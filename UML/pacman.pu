@startuml pacman

skinparam Shadowing false
skinparam classAttributeIconSize 0

Character <|-- Pacman
InputInterface <|.. KeyboardInput
InputInterface <|.. ArcadeInput
Character <|-- Monster
Monster <|-- Akabei
Monster <|-- Pinky
Monster <|-- Aosuke
Monster <|-- Guzuta
Stage o-- Pacman
Stage o-- Monster
Stage o-- Map
Stage o-- InputInterface
Map o-- Item

abstract class Character {
    - position: PVector
    - direction: int
    - spped: int

    - images: PImage[]
    - curAnimation: int
    - size: PVector
    - animetionNum: int
    - characterName: String

    + Character(position: PVector)
    + getPosition(): PVector
    + getDirection(): int
    + getSpeed(): int
    + setSpeed(speed: int)
    + move(map: Map)
    + canMove(map: Map, direction: int): boolean
    + draw()
}

class Pacman {
    - invincible: boolean
    - nextDirection: int

    + Pacman(position: PVector)
    + getNextDirection(): int
    + setNextDirection(nextDirection: int)
    + getInvincible(): boolen
    + setInvincible(invincible: boolean)
    + decideDirection(map: Map)
}

abstract class Monster {
    - ijike: boolean

    + Monster(position: PVector)
    + getIjike(): boolen
    + setIjike(ijike: boolean)
    + {abstract} decideDirection(map: Map, pacman: Pacman)
}

class Akabei {
    + Akabei(position: PVector)
    + decideDirection(map: Map, pacman: Pacman)
}

class Pinky {
    + Pinky(position: PVector)
    + decideDirection(map: Map, pacman: Pacman)
}

class Aosuke {
    + Aosuke(position: PVector)
    + decideDirection(map: Map, pacman: Pacman)
}

class Guzuta {
    + Guzuta(position: PVector)
    + decideDirection(map: Map, pacman: Pacman)
}

class Stage {
    - pacman: Pacman
    - monsters: Monster[]
    - map: Map
    - input: InputInterface
    - stageName: String

    + Stage(stageName: String, input: InputInterface)
    + update()
    + draw()
}

class Map {
    - objects: int[][]
    - foods: Item[]
    - powerFoods: Item[]
    - startPosition: PVector
    - image: PImage
    - stageName: String

    + Map(stageName: String)
    + getObject(x: int, y: int): int
    + draw()
}

class Item {
    - position: PVector
    - exist: boolean
    - image: PImage
    - imageName: String

    + Item(position: PVector, imageName: String)
    + getPosition(): PVector
    + getExist(): boolean
    + disappear()
    + draw()
}

interface InputInterface {
    + {abstract} right(): boolean
    + {abstract} up(): boolean
    + {abstract} left(): boolean
    + {abstract} down(): boolean
    + {abstract} buttonA(): boolean
    + {abstract} buttonB(): boolean
}

class KeyboardInput {
    + right(): boolean
    + up(): boolean
    + left(): boolean
    + down(): boolean
    + buttonA(): boolean
    + buttonB(): boolean
}

class ArcadeInput {
    + right(): boolean
    + up(): boolean
    + left(): boolean
    + down(): boolean
    + buttonA(): boolean
    + buttonB(): boolean
}

@enduml
